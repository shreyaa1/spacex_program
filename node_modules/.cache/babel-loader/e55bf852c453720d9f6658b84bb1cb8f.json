{"ast":null,"code":"var _jsxFileName = \"/Users/shreya/work/personal/spacex_program/spacex_program/src/components/Mission/index.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./mission.css\";\nexport const Mission = () => {\n  const [missionData, handleMissionData] = useState([]);\n\n  async function getUserAsync() {\n    let response = await fetch(`https://api.spacexdata.com/v3/launches?limit=100`);\n    let data = await response.json();\n    return handleMissionData(data);\n  }\n\n  useEffect(() => {\n    getUserAsync().then(data => data);\n  }, []);\n  console.log(missionData, \"==>\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mission\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, missionData.map((mission, index) => {\n    const landSuccess = mission.map(missionInfo => missionInfo.rocket['first_stage']['cores']);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }\n    }, mission['mission_name']), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }, mission['flight_number']), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    }, mission['launch_year']), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }\n    }, mission['launch_success']), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }, mission['mission_id']));\n  }), \" \");\n};","map":{"version":3,"sources":["/Users/shreya/work/personal/spacex_program/spacex_program/src/components/Mission/index.tsx"],"names":["React","useState","useEffect","Mission","missionData","handleMissionData","getUserAsync","response","fetch","data","json","then","console","log","map","mission","index","landSuccess","missionInfo","rocket"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,eAAP;AAIA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAEzB,QAAM,CAACC,WAAD,EAAcC,iBAAd,IAAmCJ,QAAQ,CAAC,EAAD,CAAjD;;AACA,iBAAeK,YAAf,GAA8B;AAC1B,QAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAE,kDAAF,CAA1B;AACA,QAAIC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAjB;AACA,WAAOL,iBAAiB,CAACI,IAAD,CAAxB;AACH;;AAEDP,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,YAAY,GAAGK,IAAf,CAAoBF,IAAI,IAAIA,IAA5B;AACH,GAFQ,EAEN,EAFM,CAAT;AAIAG,EAAAA,OAAO,CAACC,GAAR,CAAYT,WAAZ,EAAyB,KAAzB;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BA,WAAW,CAACU,GAAZ,CAAgB,CAACC,OAAD,EAAUC,KAAV,KAAyB;AAC/D,UAAMC,WAAW,GAAGF,OAAO,CAACD,GAAR,CAAYI,WAAW,IAAIA,WAAW,CAACC,MAAZ,CAAmB,aAAnB,EAAkC,OAAlC,CAA3B,CAApB;AACA,wBAAO,uDACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMJ,OAAO,CAAC,cAAD,CAAb,CADG,eAEH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMA,OAAO,CAAC,eAAD,CAAb,CAFG,eAGH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMA,OAAO,CAAC,aAAD,CAAb,CAHG,eAIH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMA,OAAO,CAAC,gBAAD,CAAb,CAJG,eAKH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQA,OAAO,CAAC,YAAD,CAAf,CALG,CAAP;AAOH,GATyB,CAA1B,MADJ;AAaH,CA5BM","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./mission.css\";\n\n\n\nexport const Mission = () => {\n\n    const [missionData, handleMissionData] = useState([])\n    async function getUserAsync() {\n        let response = await fetch(`https://api.spacexdata.com/v3/launches?limit=100`);\n        let data = await response.json()\n        return handleMissionData(data);\n    }\n\n    useEffect(() => {\n        getUserAsync().then(data => data);\n    }, []);\n\n    console.log(missionData, \"==>\")\n\n    return (\n        <div className=\"mission\">{missionData.map((mission, index): any => {\n            const landSuccess = mission.map(missionInfo => missionInfo.rocket['first_stage']['cores'])\n            return <>\n                <div>{mission['mission_name']}</div>\n                <div>{mission['flight_number']}</div>\n                <div>{mission['launch_year']}</div>\n                <div>{mission['launch_success']}</div>\n                <span >{mission['mission_id']}</span>\n            </>\n        })} </div>\n    )\n\n}\n"]},"metadata":{},"sourceType":"module"}